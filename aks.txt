azure docker service connection secret ID url:-

https://dev.azure.com/s27/Pro-events-Admin/_apis/serviceendpoint/endpoints?api-version=5.0-preview.2



update aks cluster with nodepools version and nodepools images version
1 (a) az aks get-upgrades --resource-group social27_k8s--name s27-tableau-prod-api --output table 

1 (b) az aks upgrade \
    --resource-group social27_k8s\
    --name s27-tableau-prod-api --kubernetes-version 1.23.8
    


1) az aks nodepool add \
--resource-group social27_k8s \
--name mainapi \
--enable-cluster-autoscaler \
--kubernetes-version 1.20.9 \
--cluster-name aks-s27-lite-api \
--labels cluster=aks-s27-lite-api \
--mode user \
--labels name=mainapi \
--max-pods 110 \
--max-count 3 \
--min-count 2 \
--node-osdisk-size 256 \
--node-vm-size Standard_D64as_v4 \
--zones 1 2 3 \
--vnet-subnet-id /subscriptions/72deed30-8019-44f1-aef0-c8714507136c/resourceGroups/rmS27Common/providers/Microsoft.Network/virtualNetworks/s27-lite/subnets/aks-lite-prod

2) SSL secrete in k8s= kubectl create secret tls single-domain-admin-tls -n single-domain-admin --key private_key_2022.key --cert cert_2022.crt

3) kubectl create secret docker-registry apilite \ --namespace api-lite \ --docker-server=social27acr.azurecr.io \ --docker-username=social27acr --docker-password=ZmL7ZLa=t8Lqi7YgMf2k30sKYBziY9wt

4) kubectl get secret social27acr-auth  --namespace api-lite --output="jsonpath={.data.\.dockerconfigjson}" | base64 --decode

5) nginx ingress upload:-
nginx.ingress.kubernetes.io/proxy-body-size: "0"
nginx.ingress.kubernetes.io/proxy-send-timeout: "600"

az aks get-upgrades \
   --resource-group ResourceGroupName --name AKSClusterName --output table

## Command to list the kubernetes version for all the nodes in your nodepools 


az aks nodepool list \  
   --resource-group ResourceGroupName --cluster-name AKSClusterName \
   --query "[].{Name:name,k8version:orchestratorVersion}" --output table

## Upgrade kubernetes version on all nodes at once 

In order to upgrade all nodes at once - we run the following command, this will upgrade all control plane and worker nodes at once to the desired kubernetes version

az aks upgrade \
   --resource-group ResourceGroupName --name AKSClusterName \
    --no-wait \
   --kubernetes-version KubernetesVersion

## Upgrade kubernetes version on control plane alone 

If we only want to upgrade the kubernetes version for control plane alone - we run the same command but with the --control-plane-only switch 

az aks upgrade \
   --resource-group ResourceGroupName --name AKSClusterName \
   --control-plane-only --no-wait \
   --kubernetes-version KubernetesVersion

## Upgrade Kubernetes version on specific node pools

If we need to upgrade the kubernetes version on only specific node pools we can run the following command by specifiying the nodepoolname and the kubernetes version 

az aks nodepool upgrade \
   --resource-group ResourceGroupName --cluster-name AKSClusterName --name NodePoolName \
   --no-wait --kubernetes-version KubernetesVersion


## Nodepool image upgrade 

Running the following command lists all the current nodeimage versions of the  nodepool 

az aks nodepool list \
   --resource-group ResourceGroupName --cluster-name AKSClusterName \
   --query "[].{Name:name,NodeImageVersion:nodeImageVersion}" --output table


the following command to list the available latest nodeimage version for us 

az aks nodepool get-upgrades \
   --resource-group ResourceGroupName --cluster-name AKSClusterName \
   --nodepool-name NodePoolName --output table


## Upgrade nodeimage version for specific nodepool 

In order to upgrade the nodeimage vefsion for a specific nodepool we run the following command : 

az aks nodepool upgrade \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name mynodepool \
    --node-image-only

az aks nodepool show \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name mynodepool

## Upgrade nodeimage version for all nodepools at once 


az aks upgrade \
    --resource-group myResourceGroup \
    --name myAKSCluster \
    --node-image-only

Remember If you donâ€™t run the nodeimage switch remember the whole cluster including the kubernetes version of the control plane is also upgraded.

az aks show \
    --resource-group myResourceGroup \
    --name myAKSCluster
